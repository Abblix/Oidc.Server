// Abblix OIDC Server Library
// Copyright (c) Abblix LLP. All rights reserved.
// 
// DISCLAIMER: This software is provided 'as-is', without any express or implied
// warranty. Use at your own risk. Abblix LLP is not liable for any damages
// arising from the use of this software.
// 
// LICENSE RESTRICTIONS: This code may not be modified, copied, or redistributed
// in any form outside of the official GitHub repository at:
// https://github.com/Abblix/OIDC.Server. All development and modifications
// must occur within the official repository and are managed solely by Abblix LLP.
// 
// Unauthorized use, modification, or distribution of this software is strictly
// prohibited and may be subject to legal action.
// 
// For full licensing terms, please visit:
// 
// https://oidc.abblix.com/license
// 
// CONTACT: For license inquiries or permissions, contact Abblix LLP at
// info@abblix.com

using Abblix.Oidc.Server.Endpoints.CheckSession.Interfaces;
using Abblix.Oidc.Server.Mvc.Formatters.Interfaces;
using Microsoft.AspNetCore.Mvc;

namespace Abblix.Oidc.Server.Mvc.Features.SessionManagement;

/// <summary>
/// A decorator class that adds caching functionality to the Check Session response formatting process.
/// </summary>
public class CheckSessionResponseCachingDecorator: ICheckSessionResponseFormatter
{
    /// <summary>
    /// Initializes a new instance of the <see cref="CheckSessionResponseCachingDecorator"/> class.
    /// </summary>
    /// <param name="inner">The inner Check Session response formatter.</param>
    /// <param name="cache">The cache used to store formatted responses.</param>
    public CheckSessionResponseCachingDecorator(
        ICheckSessionResponseFormatter inner,
        ICheckSessionResponseCache cache)
    {
        _inner = inner;
        _cache = cache;
    }

    private readonly ICheckSessionResponseFormatter _inner;
    private readonly ICheckSessionResponseCache _cache;

    /// <summary>
    /// Formats a Check Session response and caches the formatted result using the provided response's cache key.
    /// </summary>
    /// <param name="response">The Check Session response to be formatted.</param>
    /// <returns>
    /// A <see cref="Task{TResult}"/> representing the asynchronous operation. The task result contains
    /// the formatted ActionResult, either retrieved from the cache or generated by the inner formatter.
    /// </returns>
    public Task<ActionResult> FormatResponseAsync(CheckSessionResponse response)
        => _cache.GetOrAddAsync(response.CacheKey, () => _inner.FormatResponseAsync(response));
}
