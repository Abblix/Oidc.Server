// Abblix OIDC Server Library
// Copyright (c) Abblix LLP. All rights reserved.
// 
// DISCLAIMER: This software is provided 'as-is', without any express or implied
// warranty. Use at your own risk. Abblix LLP is not liable for any damages
// arising from the use of this software.
// 
// LICENSE RESTRICTIONS: This code may not be modified, copied, or redistributed
// in any form outside of the official GitHub repository at:
// https://github.com/Abblix/OIDC.Server. All development and modifications
// must occur within the official repository and are managed solely by Abblix LLP.
// 
// Unauthorized use, modification, or distribution of this software is strictly
// prohibited and may be subject to legal action.
// 
// For full licensing terms, please visit:
// 
// https://oidc.abblix.com/license
// 
// CONTACT: For license inquiries or permissions, contact Abblix LLP at
// info@abblix.com

using System.Text.Json.Serialization;

namespace Abblix.Oidc.Server.Mvc.Model;

/// <summary>
/// Represents an authorization response containing the result of an authorization request.
/// This includes potential error details, codes, tokens, and additional related data used
/// in both success and error states of OAuth 2.0 and OpenID Connect authorization processes.
/// </summary>
public record AuthorizationResponse
{
	private static class Parameters
	{
		public const string State = "state";

		public const string Code = "code";

		public const string TokenType = "token_type";
		public const string AccessToken = "access_token";

		public const string IdToken = "id_token";

		public const string Error = "error";
		public const string ErrorDescription = "error_description";
		public const string ErrorUri = "error_uri";

		public const string Scope = "scope";
		public const string SessionState = "session_state";

		public const string Issuer = "iss";
	}

	/// <summary>
	/// The error code if the authorization request has failed, identifying the specific error that occurred.
	/// </summary>
	[JsonPropertyName(Parameters.Error)]
	public string? Error { init; get; }

	/// <summary>
	/// A human-readable explanation of the error, providing detailed insight into why the authorization request failed.
	/// </summary>
	[JsonPropertyName(Parameters.ErrorDescription)]
	public string? ErrorDescription { init; get; }

	/// <summary>
	/// A URI to a web resource that provides more information about the error, helping clients understand or
	/// mitigate the issue.
	/// </summary>
	[JsonPropertyName(Parameters.ErrorUri)]
	public Uri? ErrorUri { init; get; }

	/// <summary>
	/// The state parameter originally provided by the client in the authorization request, returned unaltered in
	/// the response to maintain state between the client and the authorization server.
	/// </summary>
	[JsonPropertyName(Parameters.State)]
	public string? State { init; get; }

	/// <summary>
	/// The authorization code generated by the authorization server. This code must be exchanged for an access token
	/// at the token endpoint as part of the authorization code flow.
	/// </summary>
	[JsonPropertyName(Parameters.Code)]
	public string? Code { get; set; }

	/// <summary>
	/// The OAuth 2.0 Token Type value.
	/// The value is typically 'Bearer', but it can be another token_type value negotiated with the Authorization Server.
	/// This is included when an access_token is issued.
	/// </summary>
	[JsonPropertyName(Parameters.TokenType)]
	public string? TokenType { get; init; }

	/// <summary>
	/// The access token issued by the authorization server.
	/// Access tokens are credentials used to access protected resources.
	/// </summary>
	[JsonPropertyName(Parameters.AccessToken)]
	public string? AccessToken { get; set; }

	/// <summary>
	/// The ID token issued by the authorization server in OpenID Connect flows.
	/// It contains claims about the authentication of an end-user.
	/// </summary>
	[JsonPropertyName(Parameters.IdToken)]
	public string? IdToken { get; set; }

	/// <summary>
	/// The scopes granted by the authorization server.
	/// These scopes determine the level of access granted to the access token.
	/// </summary>
	[JsonPropertyName(Parameters.Scope)]
	public string? Scope { get; set; }

	/// <summary>
	/// The session state, which may be used in OpenID Connect session management
	/// to maintain state between the client and the authorization server.
	/// </summary>
	[JsonPropertyName(Parameters.SessionState)]
	public string? SessionState { get; set; }

	/// <summary>
	/// The issuer of the response, which is typically the URL of the authorization server from
	/// which the response originated.
	/// </summary>
	[JsonPropertyName(Parameters.Issuer)]
	public string? Issuer { get; set; }
}
